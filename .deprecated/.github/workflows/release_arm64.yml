name: Release - arm64

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

env:
  CARGO_TERM_COLOR: always
  CARGO_HTTP_DEBUG: true
  VERSION: ${{ github.ref }}
  PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_API_TOKEN }}

jobs:
  armv7_job:
    runs-on: ubuntu-20.04
    name: Build on ubuntu-20.04 aarch64

    steps:
      - uses: actions/checkout@v2
      - uses: uraimo/run-on-arch-action@v2.0.7
        with:
          arch: aarch64
          distro: ubuntu20.04
          shell: /bin/bash
          setup: |
            mkdir -p "${PWD}/artifacts"
          dockerRunArgs: |
            --volume "${PWD}/artifacts:/artifacts"
          install: |
            apt-get update -q -y
            apt-get install -y \
              curl \
              gcc-aarch64-linux-gnu \
              libssl-dev \
              pkg-config \
              llvm \
              libclang-dev
            curl https://sh.rustup.rs -sSf | sh -s -- -y
          run: |
            source $HOME/.cargo/env
            cargo build --release --target-dir /artifacts/
            ls -l /artifacts/release

      - name: Package arm64
        run: |
          curl -sfL https://install.goreleaser.com/github.com/goreleaser/nfpm.sh | sh
          ls -l "${PWD}/artifacts"
          ./bin/nfpm pkg --packager deb -f build/nfpm.arm64.yaml
          ./bin/nfpm pkg --packager rpm -f build/nfpm.arm64.yaml
          debs=(35 150 155 156 190 203 206 207 210 215 219)
          for distro_version in "${debs[@]}"; do
            curl -F "package[distro_version_id]=${distro_version}" -F "package[package_file]=@$(ls wasmcloud_*_arm64.deb)" https://$PACKAGECLOUD_TOKEN:@packagecloud.io/api/v1/repos/wasmCloud/core/packages.json;
          done
          rpms=(140 141 146 194 204 205 209 216)
          for distro_version in "${rpms[@]}"; do 
            curl -F "package[distro_version_id]=${distro_version}" -F "package[package_file]=@$(ls wasmcloud-*.aarch64.rpm)" https://$PACKAGECLOUD_TOKEN:@packagecloud.io/api/v1/repos/wasmCloud/core/packages.json;
          done
