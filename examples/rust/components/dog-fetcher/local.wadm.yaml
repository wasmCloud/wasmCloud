---
apiVersion: core.oam.dev/v1beta1
kind: Application
metadata:
  name: dog-fetcher
  annotations:
    version: v0.0.1
    description: 'HTTP hello world demo in Rust, showing use of the server and client providers'
spec:
  components:
    - name: http-component
      type: component
      properties:
        image: file://./build/dog_fetcher_s.wasm
      traits:
        # Govern the spread/scheduling of the component
        - type: spreadscaler
          properties:
            instances: 1
        # Establish a unidirectional link to the `httpclient` provider,
        # so the `http-component` (dog-fetching) component can make use of httpclient functionality
        # (i.e. making external web requests)            
        - type: link
          properties:
            target: httpclient
            namespace: wasi
            package: http
            interfaces: [outgoing-handler]

    # Add a capability provider that enables HTTP access
    - name: httpserver
      type: capability
      properties:
        image: ghcr.io/wasmcloud/http-server:0.25.0
        ## To configure OTEL integration for this provider specifically, uncomment the lines below
        # config:
        #   - name: otel
        #     properties:
        #       otel_exporter_otlp_endpoint: "http://all-in-one:4318"
        #       otel_exporter_otlp_traces_endpoint: "http://traces-backend/v1/traces"
        #       otel_exporter_otlp_metrics_endpoint: "http://metrics-backend/v1/metrics"
        #       otel_exporter_otlp_logs_endpoint: "http://logs-backend/v1/logs"
      traits:
        # Link the httpserver to the component, and configure the HTTP server
        # to listen on port 8000 for incoming requests
        #
        # Since the HTTP server calls the `http-component` component, we establish
        # a unidirectional link from this `httpserver` provider (the "source")
        # to the `http-component` component (the "target"), so the server can invoke
        # the component to handle an incoming HTTP request.
        - type: link
          properties:
            target: http-component
            namespace: wasi
            package: http
            interfaces: [incoming-handler]
            source_config:
              - name: default-http
                properties:
                  address: 0.0.0.0:8000

    - name: httpclient
      type: capability
      properties:
        image: ghcr.io/wasmcloud/http-client:0.12.1
        ## To configure OTEL integration for this provider specifically, uncomment the lines below
        # config:
        #   - name: otel
        #     properties:
        #       otel_exporter_otlp_endpoint: "http://all-in-one:4318"
        #       otel_exporter_otlp_traces_endpoint: "http://traces-backend/v1/traces"
        #       otel_exporter_otlp_metrics_endpoint: "http://metrics-backend/v1/metrics"
        #       otel_exporter_otlp_logs_endpoint: "http://logs-backend/v1/logs"
