apiVersion: core.oam.dev/v1beta1
kind: Application
metadata:
  name: rust-keyvalue-watcher
  annotations:
    description: 'HTTP Keyvalue Watcher demo in Rust, using the WebAssembly Component Model and WebAssembly Interfaces Types (WIT)'
    wasmcloud.dev/authors: wasmCloud team
    wasmcloud.dev/source-url:
    wasmcloud.dev/readme-md-url:
    wasmcloud.dev/homepage:
    wasmcloud.dev/categories: |
      http,rust,keyvalue,http-client,example
spec:
  components:
    - name: kvwatcher
      type: component
      properties:
        # To use the locally compiled code in this folder, use the line below instead after running `wash build`:
        image: file://./build/http_keyvalue_watch_s.wasm
      traits:
        # Govern the spread/scheduling of the component
        - type: spreadscaler
          properties:
            instances: 1
        # Link the component to Redis on the default Redis port
        #
        # Establish a unidirectional link to the `kvredis` (the keyvalue capability provider),
        # so the `kvwatcher` component can make use of keyvalue functionality provided by the Redis
        # (i.e. using a keyvalue cache)            
        - type: link
          properties:
            target: httpclient
            namespace: wasi
            package: http
            interfaces: [outgoing-handler]

    # Add a capability provider that enables Redis access for guest function invocation
    - name: kvredis
      type: capability
      properties:
        # TBD: next version required.
        # Will need a local copy of the redis provider here, otherwise this won't work
        image: ghcr.io/wasmcloud/keyvalue-redis:0.29.0
      traits:
        # Govern the spread/scheduling of the component
        - type: spreadscaler
          properties:
            instances: 1
        # Link the provider to component
        #
        # Establish a unidirectional link to the `kvwatcher` component,
        # so the capability-provider can call component specified guest functions.        
        - type: link
          properties:
            target: kvwatcher
            namespace: wasi
            package: keyvalue
            interfaces: [watcher]
            target_config:
              - name: redis-url
                properties:
                  url: redis://127.0.0.1:6379

        ## To configure OTEL integration for this provider specifically, uncomment the lines below
        # config:
        #   - name: otel
        #     properties:
        #       otel_exporter_otlp_endpoint: "http://all-in-one:4318"
        #       otel_exporter_otlp_traces_endpoint: "http://traces-backend/v1/traces"
        #       otel_exporter_otlp_metrics_endpoint: "http://metrics-backend/v1/metrics"
        #       otel_exporter_otlp_logs_endpoint: "http://logs-backend/v1/logs"
      # The HTTP Client that is in-charge of making outgoing calls when guest functions get invoked
    - name: httpclient
      type: capability
      properties:
        image: ghcr.io/wasmcloud/http-client:0.13.0
        ## To configure OTEL integration for this provider specifically, uncomment the lines below
        # config:
        #   - name: otel
        #     properties:
        #       otel_exporter_otlp_endpoint: "http://all-in-one:4318"
        #       otel_exporter_otlp_traces_endpoint: "http://traces-backend/v1/traces"
        #       otel_exporter_otlp_metrics_endpoint: "http://metrics-backend/v1/metrics"
        #       otel_exporter_otlp_logs_endpoint: "http://logs-backend/v1/logs"
