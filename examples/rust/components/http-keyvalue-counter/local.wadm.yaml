apiVersion: core.oam.dev/v1beta1
kind: Application
metadata:
  name: rust-http-kv
  annotations:
    version: v0.0.1
    description: 'HTTP counter demo in Rust, using the WebAssembly Component Model and WebAssembly Interfaces Types (WIT)'
spec:
  components:
    - name: counter
      type: component
      properties:
        image: file://./build/http_keyvalue_counter_s.wasm
      traits:
        # Govern the spread/scheduling of the component
        - type: spreadscaler
          properties:
            instances: 1
        # Link the component to Redis on the default Redis port
        #
        # Establish a unidirectional link to the `kvredis` (the keyvalue capability provider),
        # so the `counter` component can make use of keyvalue functionality provided by the Redis
        # (i.e. using a keyvalue cache)            
        - type: link
          properties:
            target: kvredis
            namespace: wasi
            package: keyvalue
            interfaces: [atomics, store]
            target_config:
              - name: redis-url
                properties:
                  url: redis://127.0.0.1:6379

    # Add a capability provider that enables Redis access
    - name: kvredis
      type: capability
      properties:
        image: ghcr.io/wasmcloud/keyvalue-redis:0.25.0

    # Add a capability provider that enables HTTP access
    - name: httpserver
      type: capability
      properties:
        image: ghcr.io/wasmcloud/http-server:0.22.0
      traits:
        # Link the httpserver to the component, and configure the HTTP server
        # to listen on port 8080 for incoming requests
        #
        # Since the HTTP server calls the `counter` component, we establish
        # a unidirectional link from this `httpserver` provider (the "source")
        # to the `counter` component (the "target"), so the server can invoke
        # the component to handle a request.
        - type: link
          properties:
            target: counter
            namespace: wasi
            package: http
            interfaces: [incoming-handler]
            source_config:
              - name: default-http
                properties:
                  address: 127.0.0.1:8080
