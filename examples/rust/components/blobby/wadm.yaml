# This is a full example of how to run the blobby example.
# This requires you to have WADM running: https://github.com/wasmCloud/wadm/
# You can deploy this example with a simple command:
#
# `wash app deploy wadm.yaml`

apiVersion: core.oam.dev/v1beta1
kind: Application
metadata:
  name: blobby
  annotations:
    version: v0.0.1
    description: 'wasmCloud Blobby Example'
    wasmcloud.dev/authors: wasmCloud team
    wasmcloud.dev/source-url: https://github.com/wasmCloud/wasmCloud/blob/main/examples/rust/components/blobby/wadm.yaml
    wasmcloud.dev/readme-md-url: https://github.com/wasmCloud/wasmCloud/blob/main/examples/rust/components/blobby/README.md
    wasmcloud.dev/homepage: https://github.com/wasmCloud/wasmCloud/tree/main/examples/rust/components/blobby
    wasmcloud.dev/categories:
      - http
      - http-server
      - rust
      - object-storage
      - blobstore
      - example
spec:
  components:
    - name: blobby
      type: component
      properties:
        image: wasmcloud.azurecr.io/blobby:0.1.0
      traits:
        - type: spreadscaler
          properties:
            replicas: 1
        # Establish a unidirectional link to the blobstore,
        # so the `blobby` component can make use of blobstore functionality
        # (i.e. reading/writing data blobs)
        - type: link
          properties:
            target: blobstore
            namespace: wasi
            package: blobstore
            interfaces: [blobstore]
            target_config:
              - name: root-directory
                properties:
                  root: '/tmp'

    # Capability Providers
    - name: http
      type: capability
      properties:
        image: ghcr.io/wasmcloud/http-server:0.21.0
      traits:
        # Link the httpserver to the component, and configure the HTTP server
        # to listen on port 8080 for incoming requests
        #
        # Since the HTTP server calls the `blobby` component, we establish
        # a unidirectional link from this `httpserver` provider (the "source")
        # to the `blobby` component (the "target"), so the server can invoke
        # the component to handle a request.
        - type: link
          properties:
            target: blobby
            namespace: wasi
            package: http
            interfaces: [incoming-handler]
            source_config:
              - name: default-http
                properties:
                  address: 0.0.0.0:8080
    - name: blobstore
      type: capability
      properties:
        image: ghcr.io/wasmcloud/blobstore-fs:0.7.0
