package wasmcloud:example@0.1.0;

/// This interface is generic and includes a function to process some
/// data, returning a string result.
/// We'll use this to send structured data to a component for processing.
interface process-data {
  record data {
    name: string,
    count: u32,
  }

  /// Send structured data to the component for processing
  process: func(data: data) -> string;
}

/// While processing data, sometimes a component may need to request
/// information about the system it's running on. The component isn't
/// allowed to access this information directly, so it can request it
/// from the provider.
interface system-info {
  enum kind {
    OS,
    ARCH,
  }

  /// Request information about the system the provider is running on
  request-info: func(kind: kind) -> string;

  /// Example export to call from the provider for testing
  call: func() -> string;
}

/// The `world` defines all of the imports and exports our provider can use / must implement.
world provider {
  import process-data;

  export system-info;
}
