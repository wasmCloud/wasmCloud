name: build via Nix

inputs:
  package:
    description: package specification to build
    required: true

runs:
  using: composite
  steps:
  - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684
    id: cache
    with:
      path: ${{ runner.temp }}/nix-store-${{ inputs.package }}
      key: ${{ inputs.package }}-${{ github.sha }}
      restore-keys: |
        ${{ inputs.package }}-

  - run: nix copy --no-check-sigs --all --from "file://${{ runner.temp }}/nix-store-${{ inputs.package }}"
    continue-on-error: true
    shell: bash
  - run: rm -rf "${{ runner.temp }}/nix-store-${{ inputs.package }}"
    shell: bash
  - run: nix build --fallback -L '.#${{ inputs.package }}'
    shell: bash
  - run: nix run --fallback -L --inputs-from . 'nixpkgs#coreutils' -- --coreutils-prog=cp -RLv ./result '${{ inputs.package }}'
    shell: bash
  - uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1
    with:
      name: ${{ inputs.package }}
      path: ${{ inputs.package }}
  - run: nix copy --to "file://${{ runner.temp }}/nix-store-${{ inputs.package }}" '.#${{ inputs.package }}'
    shell: bash
  - uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1
    with:
      name: nix-store-${{ inputs.package }}
      path: ${{ runner.temp }}/nix-store-${{ inputs.package }}
