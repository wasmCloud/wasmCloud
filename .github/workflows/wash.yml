name: wash

on:
  push:
    branches: [main]
  merge_group:
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  GO_VERSION: '1.24.1'
  TINYGO_VERSION: '0.36.0'

permissions:
  contents: read

jobs:
  meta:
    runs-on: ubuntu-latest
    outputs:
      modified: ${{ steps.changes.outputs.changed }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        id: changes
        with:
          list-files: shell
          filters: |
            changed:
              - './.github/workflows/wash.yml'
              - './.github/actions/install-cached-wash-cli/action.yml'
              - 'Cargo.lock'
              - 'Cargo.toml'
              - 'crates/control-interface/**'
              - 'crates/core/**'
              - 'crates/secrets-types/**'
              - 'crates/tracing/**'
              - 'crates/wash/**'
              - '!crates/**/*.md'
              - '!crates/wash/.devcontainer'
      - name: Changed files
        run: |
          echo "Changed file(s) (${{ steps.changes.outputs.changed_count }})"
          echo "${{ steps.changes.outputs.changed_files }}"

  unit_tests:
    needs: [meta]
    if: ${{ needs.meta.outputs.modified == 'true' }}
    name: Unit Tests
    strategy:
      fail-fast: false # Ensure we can run the full suite even if one OS fails
      matrix:
        os: [ubuntu-latest-4-cores, windows-latest, macos-13]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af
        with:
          node-version: '18.x'
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - run: rustup show
      - uses: Swatinem/rust-cache@82a92a6e8fbeee089604da2575dc567ae9ddeaab
        with:
          shared-key: '${{ matrix.os }}-shared-cache'
      - name: Install nextest
        uses: taiki-e/install-action@4a7eafa27f0bd6857fe4f46dad5c66568c426ac0 # v2.49.22
        with:
          tool: nextest,wit-bindgen-cli
      - uses: taiki-e/install-action@4a7eafa27f0bd6857fe4f46dad5c66568c426ac0 # v2.49.22
        with:
          tool: wasm-tools@1.225.0 # TODO: update once wit-bindgen-go is fixed
      - uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: acifani/setup-tinygo@b2ba42b249c7d3efdfe94166ec0f48b3191404f7
        with:
          tinygo-version: ${{ env.TINYGO_VERSION }}
          install-binaryen: 'false'

      # Run builds and tests only on Linux and macOS for PRs, Windows on `main`
      - name: Build wash
        if: ${{ matrix.os != 'windows-latest' || github.ref == 'refs/heads/main' }}
        run: make build
        working-directory: ./crates/wash

      - name: Run all wash unit tests
        if: ${{ matrix.os != 'windows-latest' || github.ref == 'refs/heads/main' }}
        run: make test-wash-ci
        working-directory: ./crates/wash

  integration_tests:
    needs: [meta]
    if: ${{ needs.meta.outputs.modified == 'true' }}
    name: Integration Tests
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      # Free disk space
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be # v1.3.1
      - run: rustup show
      - uses: Swatinem/rust-cache@82a92a6e8fbeee089604da2575dc567ae9ddeaab
        with:
          shared-key: 'ubuntu-22.04-shared-cache'
      - uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: acifani/setup-tinygo@b2ba42b249c7d3efdfe94166ec0f48b3191404f7
        with:
          tinygo-version: ${{ env.TINYGO_VERSION }}
          install-binaryen: 'false'
      - name: Launch integration test services
        uses: sudo-bot/action-docker-compose@ef4c4da08a9673f93d4eb8a5da1e942bf24a37ea
        with:
          cli-args: '-f ./crates/wash/tools/docker-compose.yml up --detach'
      - name: Install nextest
        uses: taiki-e/install-action@4a7eafa27f0bd6857fe4f46dad5c66568c426ac0 # v2.49.22
        with:
          tool: nextest,wit-bindgen-cli
      - uses: taiki-e/install-action@4a7eafa27f0bd6857fe4f46dad5c66568c426ac0 # v2.49.22
        with:
          tool: wasm-tools@1.225.0 # TODO: update once wit-bindgen-go is fixed
      - name: Run integration tests
        run: make test-integration-ci
        working-directory: ./crates/wash

  # Regression E2E tests to ensure that `wash new component` works consistently,
  # including older (released) versions of `wash`
  e2e_tests_wash_new_actor:
    needs: [meta]
    if: ${{ needs.meta.outputs.modified == 'true' }}
    name: E2E Tests (`wash new`)
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        wash-version:
          - 0.39.0
        template:
          - name: hello-world-rust
            lang: rust
          - name: hello-world-tinygo
            lang: tinygo
            lang-version: '1.23'
          - name: hello-world-typescript
            lang: typescript
            lang-version: '22.x'
          - name: hello-world-python
            lang: python
            lang-version: '3.10'
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      # Set up language toolchain
      - name: Setup WebAssembly toolchains for language
        uses: ./.github/actions/wasm-lang-toolchain-setup
        with:
          language: ${{ matrix.template.lang }}
          language-version: ${{ matrix.template.lang-version }}
          wash-version: ${{ matrix.wash-version }}

      # Set up Rust & trigger cargo toolchain
      - run: rustup show
      - uses: Swatinem/rust-cache@82a92a6e8fbeee089604da2575dc567ae9ddeaab
        with:
          shared-key: 'ubuntu-22.04-shared-cache'

      - name: Ensure `wash new` works
        run: wash new component ${{ matrix.template.name }} --template-name ${{ matrix.template.name }}

  # This check always runs, and only succeeds if wash tests should run and they pass
  wash_successful_checks:
    needs:
      - meta
      - unit_tests
      - integration_tests
      - e2e_tests_wash_new_actor
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - name: Results
        run: |
          echo 'needs.unit_tests.result: ${{ needs.unit_tests.result }}'
          echo 'needs.integration_tests.result: ${{ needs.integration_tests.result }}'
          echo 'needs.e2e_tests_wash_new_actor.result: ${{ needs.e2e_tests_wash_new_actor.result }}'
      - name: Verify jobs
        # All jobs must succeed or be skipped.
        if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
        run: exit 1
