name: build

on:
  pull_request:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  SEGMENT_DOWNLOAD_TIMEOUT_MINS: 1 # abort caching attempt if it's slow

jobs:
  build:
    strategy:
      matrix:
        platform:
        - host: macos-12
          target: aarch64-apple-darwin
          # TODO: Run aarch64 binary on host system and via OCI
          test-bin: file ./result/bin/wasmcloud --version
          test-oci: echo "OCI runtime not available, skip"

        - host: ubuntu-22.04
          target: aarch64-unknown-linux-musl
          test-bin: nix shell --inputs-from . 'nixpkgs#qemu' -c qemu-aarch64 ./result/bin/wasmcloud --version
          test-oci: docker load < ./result
          # TODO: Run aarch64 binary within OCI

        - host: macos-12
          target: x86_64-apple-darwin
          test-bin: ./result/bin/wasmcloud --version
          test-oci: echo "OCI runtime not available, skip"

        - host: ubuntu-22.04
          target: x86_64-unknown-linux-musl
          test-bin: ./result/bin/wasmcloud --version
          test-oci: |
            docker load < ./result
            docker run --rm wasmcloud:$(nix eval --raw .#wasmcloud-x86_64-unknown-linux-musl-oci.imageTag) wasmcloud --version

    name: wasmcloud-${{ matrix.platform.target }}
    runs-on: ${{ matrix.platform.host }}
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/install-nix
      with: 
        cachixAuthToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - run: nix build -L --show-trace '.#wasmcloud-${{ matrix.platform.target }}'
    - run: nix run --inputs-from . 'nixpkgs#coreutils' -- --coreutils-prog=ginstall -p ./result/bin/wasmcloud "wasmcloud-${{ matrix.platform.target }}"
    - uses: actions/upload-artifact@v3
      with:
        name: wasmcloud-${{ matrix.platform.target }}
        path: wasmcloud-${{ matrix.platform.target }}
    - run: ${{ matrix.platform.test-bin }}

    - run: nix build -L --show-trace '.#wasmcloud-${{ matrix.platform.target }}-oci'
    - run: nix run --inputs-from . 'nixpkgs#coreutils' -- --coreutils-prog=ginstall -p ./result "wasmcloud-${{ matrix.platform.target }}-oci"
    - uses: actions/upload-artifact@v3
      with:
        name: wasmcloud-${{ matrix.platform.target }}-oci
        path: wasmcloud-${{ matrix.platform.target }}-oci
    - run: ${{ matrix.platform.test-oci }}

  lipo:
    name: wasmcloud-universal-darwin
    needs: build
    runs-on: macos-12
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: wasmcloud-aarch64-apple-darwin
    - uses: actions/download-artifact@v3
      with:
        name: wasmcloud-x86_64-apple-darwin
    - run: lipo -create ./wasmcloud-aarch64-apple-darwin ./wasmcloud-x86_64-apple-darwin -output ./wasmcloud-universal-darwin
    - run: chmod +x ./wasmcloud-universal-darwin
    - run: ./wasmcloud-universal-darwin --version
    - uses: actions/upload-artifact@v3
      with:
        name: wasmcloud-universal-darwin
        path: wasmcloud-universal-darwin
