package wasmcloud:wadm@0.1.0;

interface types {

    record model-summary {
        name: string,
        version: string,
        description: option<string>,
        deployed-version: option<string>,
        status: status-type,
        status-message: option<string>
    }

    record version-info {
        version: string,
        deployed: bool
    }

    record status-update {
        app: string,
        status: status
    }

    record status {
        version: string,
        info: status-info,
        components: list<component-status>
    }

    record component-status {
        name: string,
        component-type: string,
        info: status-info,
        traits: list<trait-status>
    }

    record trait-status {
        trait-type: string,
        info: status-info
    }

    record status-info {
        status-type: status-type,
        message: string
    }

    enum put-result {
        error,
        created,
        new-version
    }

    enum get-result {
        error,
        success,
        not-found
    }

    enum status-result {
        error,
        ok,
        not-found
    }

    enum delete-result {
        deleted,
        error,
        noop
    }

    enum status-type {
        undeployed,
        reconciling,
        deployed,
        failed
    }

    enum deploy-result {
        error,
        acknowledged,
        not-found
    }

    // The overall structure of an OAM manifest.
    record oam-manifest {
        api-version: string,
        kind: string,
        metadata: metadata,
        spec: specification,
    }

    // Metadata describing the manifest
    record metadata {
        name: string,
        annotations: list<tuple<string, string>>,
        labels: list<tuple<string, string>>,
    }

    // The specification for this manifest
    record specification {
        components: list<component>,
    }

    // A component definition
    record component {
        name: string,
        properties: properties,
        traits: list<trait>,
    }

    // Properties that can be defined for a component
    variant properties {
        component(component-properties),
        capability(capability-properties),
    }

    // Properties for a component
    record component-properties {
        image: string,
        id: option<string>,
        config: list<config-property>,
    }

    // Properties for a capability
    record capability-properties {
        image: string,
        id: option<string>,
        config: list<config-property>,
    }

    // Properties for the config list associated with components, providers, and links
    record config-property {
        name: string,
        properties: option<list<tuple<string, string>>>,
    }

    // A trait definition
    record trait {
        trait-type: string,
        properties: trait-property,
    }

    // Properties for defining traits
    variant trait-property {
        link(link-property),
        spreadscaler(spreadscaler-property),
        custom(string),
    }

    // Properties for links
    record link-property {
        target: string,
        namespace: string,
        %package: string,
        interfaces: list<string>,
        source-config: list<config-property>,
        target-config: list<config-property>,
        name: option<string>,
    }

    // Properties for spread scalers
    record spreadscaler-property {
        instances: u32,
        spread: list<spread>,
    }

    // Configuration for various spreading requirements
    record spread {
        name: string,
        requirements: list<tuple<string, string>>,
        weight: option<u32>,
    }
}
