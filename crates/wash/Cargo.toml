[package]
name = "wash"
version = "0.41.0"
categories = ["wasm", "command-line-utilities"]
description = "wasmCloud Shell (wash) - CLI tool and library for wasmCloud development"
keywords = ["webassembly", "wasmcloud", "wash", "cli"]
readme = "README.md"

authors.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true

[badges]
maintenance = { status = "actively-developed" }

[features]
default = ["start", "parser", "nats", "plugin", "cli"]
start = ["semver"]
parser = ["config", "semver"]
cli = [
    "clap",
    "term-table",
    "console",
    "dialoguer",
    "heck",
    "ignore",
    "indicatif",
    "path-absolutize",
]
nats = ["dep:async-nats", "wadm-types"]
docs = []
plugin = ["wasmtime", "wasmtime-wasi", "wasmtime-wasi-http"]

[dependencies]
anstyle = { workspace = true }
anyhow = { workspace = true, features = ["backtrace"] }
async-compression = { workspace = true, features = ["tokio", "gzip"] }
async-nats = { workspace = true, optional = true }
bytes = { workspace = true, features = ["serde"] }
cargo_metadata = { workspace = true }
cargo_toml = { workspace = true }
chrono = { workspace = true, features = ["serde"] }
clap = { workspace = true, features = [
    "cargo",
    "derive",
    "env",
    "std",
    "string",
], optional = true }
clap_complete = { workspace = true }
clap-markdown = { workspace = true }
cloudevents-sdk = { workspace = true }
command-group = { workspace = true, features = ["with-tokio"] }
config = { workspace = true, features = ["toml"], optional = true }
console = { workspace = true, optional = true }
crossterm = { workspace = true, features = ["events", "windows"] }
dialoguer = { workspace = true, optional = true }
docker_credential = { workspace = true }
etcetera = { workspace = true }
file-guard = { workspace = true }
futures = { workspace = true }
handlebars = { workspace = true }
heck = { workspace = true, optional = true }
http = { workspace = true }
humantime = { workspace = true }
ignore = { workspace = true, optional = true }
indicatif = { workspace = true, optional = true }
nix = { workspace = true, features = ["signal"] }
nkeys = { workspace = true, features = ["xkeys"] }
normpath = { workspace = true }
notify = { workspace = true }
oci-client = { workspace = true, features = ["rustls-tls"] }
oci-wasm = { workspace = true, features = ["rustls-tls"] }
once_cell = { workspace = true }
path-absolutize = { workspace = true, features = [
    "once_cell_cache",
], optional = true }
provider-archive = { workspace = true }
rand = { workspace = true, features = ["thread_rng"] }
regex = { workspace = true }
reqwest = { workspace = true, features = ["json", "rustls-tls", "stream"] }
rmp-serde = { workspace = true }
rmpv = { workspace = true }
sanitize-filename = { workspace = true }
semver = { workspace = true, features = ["serde"], optional = true }
serde = { workspace = true, features = ["derive"] }
serde_bytes = { workspace = true }
serde_json = { workspace = true, features = ["raw_value"] }
serde_with = { workspace = true, features = ["macros"] }
serde_yaml = { workspace = true }
sha2 = { workspace = true }
sysinfo = { workspace = true, features = ["system"] }
tempfile = { workspace = true }
term-table = { workspace = true, optional = true }
termcolor = { workspace = true }
termsize = { workspace = true }
thiserror = { workspace = true }
time = { workspace = true }
tokio = { workspace = true, features = ["full"] }
tokio-stream = { workspace = true }
tokio-tar = { workspace = true }
tokio-util = { workspace = true }
toml = { workspace = true, features = ["parse"] }
tracing = { workspace = true, features = ["log"] }
tracing-subscriber = { workspace = true, features = [
    "ansi",
    "env-filter",
    "fmt",
    "json",
    "std",
] }
url = { workspace = true }
wadm-client = { workspace = true }
wadm-types = { workspace = true, optional = true }
walkdir = { workspace = true }
warp = { workspace = true }
wascap = { workspace = true }
wasi-preview1-component-adapter-provider = { workspace = true }
wasm-encoder = { workspace = true }
wasm-pkg-client = { workspace = true }
wasm-pkg-core = { workspace = true }
wasmcloud-control-interface = { workspace = true }
wasmcloud-core = { workspace = true, features = [
    "oci",
    "reqwest",
    "rustls-native-certs",
] }
wasmcloud-secrets-types = { workspace = true }
wasmparser = { workspace = true }
wasmtime = { workspace = true, optional = true, features = [
    "cranelift",
    "cache",
    "component-model",
    "gc",
] }
wasmtime-wasi = { workspace = true, optional = true }
wasmtime-wasi-http = { workspace = true, optional = true }
which = { workspace = true }
wit-bindgen-wrpc = { workspace = true }
wit-component = { workspace = true }
wit-parser = { workspace = true }
wrpc-interface-http = { workspace = true, features = ["http-body"] }
wrpc-transport = { workspace = true }
wrpc-transport-nats = { workspace = true }
wat = { workspace = true }

[target.'cfg(target_os = "macos")'.dependencies]
notify = { workspace = true, features = ["macos_fsevent"] }

[dev-dependencies]
assert-json-diff = { workspace = true }
claims = { workspace = true }
reqwest = { workspace = true }
serial_test = { workspace = true }
sysinfo = { workspace = true }
tempfile = { workspace = true }
test-case = { workspace = true }
tokio = { workspace = true }
toml = { workspace = true }
wasmcloud-test-util = { workspace = true, features = ["testcontainers"] }
wat = { workspace = true }
wit-component = { workspace = true }
wasm-pkg-client = { workspace = true }

[build-dependencies]
tokio = { workspace = true, features = [
    "macros",
    "net",
    "fs",
    "rt-multi-thread",
    "time",
] }
testcontainers = { workspace = true }

[package.metadata.binstall]
pkg-url = "{ repo }/releases/download/{name}-v{version}/wash-{ target }{ binary-ext }"
pkg-fmt = "bin"

[package.metadata.cargo-machete]
ignored = ["serde_bytes", "cloudevents-sdk"]
