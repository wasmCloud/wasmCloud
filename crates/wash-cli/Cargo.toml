[package]
name = "wash-cli"
version = "0.32.0"
categories = ["wasm", "command-line-utilities"]
description = "wasmCloud Shell (wash) CLI tool"
keywords = ["webassembly", "wasmcloud", "wash", "cli"]
readme = "README.md"

authors.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true

[badges]
maintenance = { status = "actively-developed" }

[dependencies]
anstyle = { workspace = true }
anyhow = { workspace = true, features = ["backtrace"] }
async-compression = { workspace = true, features = ["tokio", "gzip"] }
# We use a separate version of async-nats that has some code that isn't upstream
# to support the needs of wRPC libraries.
#
# TODO: Unify upstream async-nats and wrpc-nats if/when https://github.com/nats-io/nats.rs/pull/1267
# or something similar is implemented
async-nats = { workspace = true }
async-nats-0_33 = { workspace = true }
bytes = { workspace = true }
clap = { workspace = true, features = ["cargo", "derive", "env", "std", "string"] }
clap_complete = { workspace = true }
clap-markdown = { workspace = true }
cloudevents-sdk = { workspace = true }
console = { workspace = true }
crossterm ={ workspace = true, features = ["events","windows"] }
dirs = { workspace = true }
futures = { workspace = true }
http = { workspace = true }
humantime.workspace = true
indicatif = { workspace = true }
nix = { workspace = true, features = ["signal"] }
nkeys = { workspace = true, features = ["xkeys"] }
notify = { workspace = true }
oci-distribution = { workspace = true, features = ["rustls-tls"] }
oci-wasm = { workspace = true, features = ["rustls-tls"] }
once_cell = { workspace = true }
provider-archive = { workspace = true }
regex = { workspace = true }
reqwest = { workspace = true, features = ["json", "rustls-tls", "stream"] }
rmp-serde = { workspace = true }
rmpv = { workspace = true }
sanitize-filename = { workspace = true }
semver = { workspace = true }
serde = { workspace = true, features = ["derive"] }
serde_bytes = { workspace = true }
serde_json = { workspace = true, features = ["raw_value"] }
serde_with = { workspace = true }
serde_yaml = { workspace = true }
sha2 = { workspace = true }
sysinfo = { workspace = true }
tempfile = { workspace = true }
term-table = { workspace = true }
termcolor = { workspace = true }
termsize = { workspace = true }
thiserror = { workspace = true }
tokio = { workspace = true, features = ["full"] }
tokio-tar = { workspace = true }
tokio-util = { workspace = true }
toml = { workspace = true }
tracing = { workspace = true, features = ["log"] }
tracing-subscriber = { workspace = true, features = [
    "ansi",
    "env-filter",
    "fmt",
    "json",
    "std",
] }
url = { workspace = true }
wadm-client = { workspace = true }
wadm-types = { workspace = true }
warp = { workspace = true }
wascap = { workspace = true }
wash-lib = { workspace = true, features = [
    "cli",
    "parser",
    "nats",
    "start",
    "plugin",
] }
wasmcloud-control-interface = { workspace = true }
wasmcloud-core = { workspace = true }
wasmcloud-provider-sdk = { workspace = true }
wasmcloud-secrets-types = { workspace = true }
weld-codegen = { workspace = true, features = ["wasmbus"] }
which = { workspace = true }
wit-bindgen-wrpc = { workspace = true }
wit-parser = { workspace = true }
wrpc-interface-http = { workspace = true, features = [ "http-body" ] }
wrpc-transport = { workspace = true }
wrpc-transport-nats = { workspace = true }

[target.'cfg(target_os = "macos")'.dependencies]
notify = { workspace = true, features = ["macos_fsevent"] }

[dev-dependencies]
assert-json-diff = { workspace = true }
rand = { workspace = true }
reqwest = { workspace = true }
serial_test = { workspace = true }
sysinfo = { workspace = true }
wat = { workspace = true }

[build-dependencies]
tokio = { workspace = true, features = ["macros", "net"] }