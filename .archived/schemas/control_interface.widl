namespace "ctliface"

type ProviderAuctionRequest{
    "Can either be an OCI image reference or the 56-character public key of the provider"
    provider_ref: string
    link_name: string
    constraints: {string:string}
}

type ProviderAuctionAck {
    "Can either be an OCI image reference or the 56-character public key of the provider"
    provider_ref: string
    link_name: string
    host_id: string
}

type ActorAuctionRequest{
    "Can either be an OCI image reference or the 56-character public key of the actor"
    actor_ref: string
    constraints: {string:string}
}

type ActorAuctionAck{
    "Can either be an OCI image reference or the 56-character public key of the actor"
    actor_ref: string
    constraints: {string:string}
    host_id: string
}

type StartActorCommand {
    "Can either be an OCI image reference or the 56-character public key of the actor"
    actor_ref: string
    host_id: string
}

type StartActorAck {
    host_id: string
    "Can either be an OCI image reference or the 56-character public key of the actor"
    actor_ref: string
    actor_id: string
    failure: string?
}

type StartProviderCommand {
    host_id: string
    "Can either be an OCI image reference or the 56-character public key of the provider"
    provider_ref: string
    link_name: string
}

type StartProviderAck {
    host_id: string
    "Can either be an OCI image reference or the 56-character public key of the provider"
    provider_ref: string    
    provider_id: string
    failure: string?
}

type StopActorCommand {
    host_id: string
    "Can either be an OCI image reference or the 56-character public key of the actor"
    actor_ref: string
}

type StopProviderCommand {
    host_id: string
    "Can either be an OCI image reference or the 56-character public key of the provider"
    provider_ref: string
    link_name: string
}

type UpdateActorCommand {
    host_id: string
    actor_id: string
    new_actor_ref: string
}

type UpdateActorAck {
    failure: string?
}

type StopActorAck {
    failure: string?
}

type StopProviderAck {
    failure: string?
}

type LinkDefinitionList {
    links: [LinkDefinition]
}

type LinkDefinition {
    actor_id: string
    provider_id: string
    contract_id: string
    link_name: string
    values: {string:string}
}

type HostList {
    hosts: [Host]
}

type Host {
    id: string
    uptime_seconds: u64
}

type ClaimsList {
    claims: [Claims]
}

type Claims {
    values: {string:string}
}

type HostInventory {
    host_id: string
    labels: {string:string}
    actors: [ActorDescription]
    providers: [ProviderDescription]
}

type ActorDescription {
    id: string
    "If there is a corresponding OCI image reference for this actor it will be in this field"
    image_ref: string?
    name: string?
    revision: i32
}

type ProviderDescription {
    id: string
    link_name: string
    "If there is a corresponding OCI image reference for this provider it will be in this field"
    image_ref: string?
    name: string?
    revision: i32
}
